/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2023_21091;

import static androidx.test.core.app.ApplicationProvider.getApplicationContext;

import static org.junit.Assert.assertTrue;
import static org.junit.Assume.assumeNoException;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;

import androidx.test.runner.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.TimeUnit;

@RunWith(AndroidJUnit4.class)
public class DeviceTest {

    @Test
    public void testPocCVE_2023_21091() {
        try {
            Context context = getApplicationContext();

            // Starting PoC to launch the locale language settings.
            Intent intent = new Intent(context, PocActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            context.startActivity(intent);

            // Broadcast to receive the status for the presence of vulnerability from PocActivity.
            CompletableFuture<Boolean> broadcastReceived = new CompletableFuture<Boolean>();
            BroadcastReceiver broadcastReceiver =
                    new BroadcastReceiver() {
                        @Override
                        public void onReceive(Context context, Intent intent) {
                            broadcastReceived.complete(
                                    intent.getBooleanExtra(
                                            context.getString(R.string.isFixPresent), true));
                        }
                    };
            IntentFilter filter = new IntentFilter(context.getString(R.string.broadcastAction));
            context.registerReceiver(broadcastReceiver, filter);

            // Waiting for the broadcast to receive to validate the test.
            final int waitForAdminBroadcast = 10000;
            assertTrue(context.getString(R.string.failMessage),
                    broadcastReceived.get(waitForAdminBroadcast, TimeUnit.SECONDS));
        } catch (Exception e) {
            assumeNoException(e);
        }
    }
}
