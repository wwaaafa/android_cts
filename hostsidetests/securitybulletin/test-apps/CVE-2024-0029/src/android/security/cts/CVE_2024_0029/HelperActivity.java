/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2024_0029;

import static com.google.common.truth.TruthJUnit.assume;

import android.app.Activity;
import android.app.admin.DevicePolicyManager;
import android.content.ComponentName;

public class HelperActivity extends Activity {

    @Override
    public void onResume() {
        try {
            super.onResume();

            // Disable the screen capture
            final DevicePolicyManager devicePolicyManager =
                    getSystemService(DevicePolicyManager.class);
            final ComponentName componentName =
                    new ComponentName(getPackageName(), PocAdminReceiver.class.getName());
            devicePolicyManager.setScreenCaptureDisabled(componentName, true);

            // Verify if the 'screen capture' policy was disabled successfully
            assume().withMessage("The 'screen capture' policy failed to disable")
                    .that(devicePolicyManager.getScreenCaptureDisabled(componentName))
                    .isTrue();
        } catch (Exception e) {
            assume().that(e).isNull();
        }
    }
}
