/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2023_40116_helper;

import static android.app.PictureInPictureParams.Builder;

import android.app.Activity;
import android.graphics.Color;
import android.graphics.Rect;
import android.os.Handler;
import android.os.HandlerThread;

public class PipActivity extends Activity {

    @Override
    protected void onResume() {
        super.onResume();

        // Setting the background color to blue so that the screenshot can be
        // taken and used check if the pip window becomes invisible using the
        // presence of blue color in the screenshot.
        getWindow().getDecorView().setBackgroundColor(Color.BLUE);

        // Enable picture in picture mode, if not already enabled.
        if (!isInPictureInPictureMode()) {
            Builder builder = new Builder();

            // setSourceRectHint() called here allows very small bounds to be
            // set to make the activity effectively invisible.
            builder.setSourceRectHint(new Rect(1, 1, 2, 2));

            // Create HandlerThread and post the Runnable tasks.
            HandlerThread handlerThread = new HandlerThread(getPackageName());
            handlerThread.start();
            Handler handler = new Handler(handlerThread.getLooper());

            // The pip window takes some time to load, hence for
            // the device test to detect it corerectly, we need
            // to add a sleep.
            handler.postDelayed(
                    () -> {
                        enterPictureInPictureMode(builder.build());
                        runOnUiThread(
                                () -> {
                                    try {
                                        Thread.sleep(10_000L);
                                    } catch (Exception e) {
                                        // Ignore
                                    }
                                });
                    },
                    1_000);
        }
    }
}
