/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2023_21135;

import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;

import static org.junit.Assert.assertFalse;
import static org.junit.Assume.assumeNoException;
import static org.junit.Assume.assumeNotNull;

import android.content.Context;
import android.content.Intent;
import android.provider.Settings;

import androidx.test.runner.AndroidJUnit4;
import androidx.test.uiautomator.By;
import androidx.test.uiautomator.UiDevice;
import androidx.test.uiautomator.UiObject2;

import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(AndroidJUnit4.class)
public class DeviceTest {

    @Test
    public void testNotificationPermission() {
        try {
            Context context = getInstrumentation().getTargetContext();
            final UiDevice uiDevice = UiDevice.getInstance(getInstrumentation());

            // Launching Device and app notification window
            Intent intent = new Intent(Settings.ACTION_NOTIFICATION_LISTENER_SETTINGS);
            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            context.startActivity(intent);

            // Checking if Device and app notification window appears
            UiObject2 uiObjectWindow =
                    uiDevice.findObject(By.text(context.getString(R.string.deviceAndAppNotific)));
            assumeNotNull(uiObjectWindow);

            // Checking if listener service is present in Device and app notification window
            UiObject2 listener =
                    uiDevice.findObject(By.text(context.getPackageName()));

            // Failing the test if listener service is present
            assertFalse(context.getString(R.string.vulnerableMsg), listener != null);
        } catch (Exception e) {
            assumeNoException(e);
        }
    }
}
