/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package android.app.cts.shortfgstesthelper;

import android.annotation.Nullable;
import android.content.ComponentName;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.SystemClock;

import com.android.internal.util.DataClass;

/**
 * Message class used in this test.
 *
 * CHECKSTYLE:OFF Generated code
 * codegen $ANDROID_BUILD_TOP/cts/tests/app/ShortFgsTest/ShortFgsTestHelper/src/android/app/cts/shortfgstesthelper/ShortFgsMessage.java
 */
@DataClass(
        genConstructor = false,
        genSetters = true,
        genToString = true,
        genAidl = false)
public class ShortFgsMessage implements Parcelable {
    public ShortFgsMessage() {
        mTimestamp = SystemClock.uptimeMillis();
    }

    final private long mTimestamp;

    @Nullable
    private String mFailureMessage;
    private boolean mSetForeground;
    private int mFgsType;
    private int mStartCommandResult;
    private int mServiceStartId;
    @Nullable
    private ComponentName mComponentName;

    @Nullable
    private String mMethodName;



    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/cts/tests/app/ShortFgsTest/ShortFgsTestHelper/src/android/app/cts/shortfgstesthelper/ShortFgsMessage.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    @DataClass.Generated.Member
    public long getTimestamp() {
        return mTimestamp;
    }

    @DataClass.Generated.Member
    public @Nullable String getFailureMessage() {
        return mFailureMessage;
    }

    @DataClass.Generated.Member
    public boolean isSetForeground() {
        return mSetForeground;
    }

    @DataClass.Generated.Member
    public int getFgsType() {
        return mFgsType;
    }

    @DataClass.Generated.Member
    public int getStartCommandResult() {
        return mStartCommandResult;
    }

    @DataClass.Generated.Member
    public int getServiceStartId() {
        return mServiceStartId;
    }

    @DataClass.Generated.Member
    public @Nullable ComponentName getComponentName() {
        return mComponentName;
    }

    @DataClass.Generated.Member
    public @Nullable String getMethodName() {
        return mMethodName;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setFailureMessage(@android.annotation.NonNull String value) {
        mFailureMessage = value;
        return this;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setSetForeground( boolean value) {
        mSetForeground = value;
        return this;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setFgsType( int value) {
        mFgsType = value;
        return this;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setStartCommandResult( int value) {
        mStartCommandResult = value;
        return this;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setServiceStartId( int value) {
        mServiceStartId = value;
        return this;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setComponentName(@android.annotation.NonNull ComponentName value) {
        mComponentName = value;
        return this;
    }

    @DataClass.Generated.Member
    public @android.annotation.NonNull ShortFgsMessage setMethodName(@android.annotation.NonNull String value) {
        mMethodName = value;
        return this;
    }

    @Override
    @DataClass.Generated.Member
    public String toString() {
        // You can override field toString logic by defining methods like:
        // String fieldNameToString() { ... }

        return "ShortFgsMessage { " +
                "timestamp = " + mTimestamp + ", " +
                "failureMessage = " + mFailureMessage + ", " +
                "setForeground = " + mSetForeground + ", " +
                "fgsType = " + mFgsType + ", " +
                "startCommandResult = " + mStartCommandResult + ", " +
                "serviceStartId = " + mServiceStartId + ", " +
                "componentName = " + mComponentName + ", " +
                "methodName = " + mMethodName +
        " }";
    }

    @Override
    @DataClass.Generated.Member
    public void writeToParcel(@android.annotation.NonNull Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }

        int flg = 0;
        if (mSetForeground) flg |= 0x4;
        if (mFailureMessage != null) flg |= 0x2;
        if (mComponentName != null) flg |= 0x40;
        if (mMethodName != null) flg |= 0x80;
        dest.writeInt(flg);
        dest.writeLong(mTimestamp);
        if (mFailureMessage != null) dest.writeString(mFailureMessage);
        dest.writeInt(mFgsType);
        dest.writeInt(mStartCommandResult);
        dest.writeInt(mServiceStartId);
        if (mComponentName != null) dest.writeTypedObject(mComponentName, flags);
        if (mMethodName != null) dest.writeString(mMethodName);
    }

    @Override
    @DataClass.Generated.Member
    public int describeContents() { return 0; }

    /** @hide */
    @SuppressWarnings({"unchecked", "RedundantCast"})
    @DataClass.Generated.Member
    protected ShortFgsMessage(@android.annotation.NonNull Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }

        int flg = in.readInt();
        boolean setForeground = (flg & 0x4) != 0;
        long timestamp = in.readLong();
        String failureMessage = (flg & 0x2) == 0 ? null : in.readString();
        int fgsType = in.readInt();
        int startCommandResult = in.readInt();
        int serviceStartId = in.readInt();
        ComponentName componentName = (flg & 0x40) == 0 ? null : (ComponentName) in.readTypedObject(ComponentName.CREATOR);
        String methodName = (flg & 0x80) == 0 ? null : in.readString();

        this.mTimestamp = timestamp;
        this.mFailureMessage = failureMessage;
        this.mSetForeground = setForeground;
        this.mFgsType = fgsType;
        this.mStartCommandResult = startCommandResult;
        this.mServiceStartId = serviceStartId;
        this.mComponentName = componentName;
        this.mMethodName = methodName;

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public static final @android.annotation.NonNull Parcelable.Creator<ShortFgsMessage> CREATOR
            = new Parcelable.Creator<ShortFgsMessage>() {
        @Override
        public ShortFgsMessage[] newArray(int size) {
            return new ShortFgsMessage[size];
        }

        @Override
        public ShortFgsMessage createFromParcel(@android.annotation.NonNull Parcel in) {
            return new ShortFgsMessage(in);
        }
    };

    @DataClass.Generated(
            time = 1669760723754L,
            codegenVersion = "1.0.23",
            sourceFile = "cts/tests/app/ShortFgsTest/ShortFgsTestHelper/src/android/app/cts/shortfgstesthelper/ShortFgsMessage.java",
            inputSignatures = "final private  long mTimestamp\nprivate @android.annotation.Nullable java.lang.String mFailureMessage\nprivate  boolean mSetForeground\nprivate  int mFgsType\nprivate  int mStartCommandResult\nprivate  int mServiceStartId\nprivate @android.annotation.Nullable android.content.ComponentName mComponentName\nprivate @android.annotation.Nullable java.lang.String mMethodName\nclass ShortFgsMessage extends java.lang.Object implements [android.os.Parcelable]\n@com.android.internal.util.DataClass(genConstructor=false, genSetters=true, genToString=true, genAidl=false)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
